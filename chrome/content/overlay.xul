<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE overlay SYSTEM "chrome://frantshelley/locale/frantshelley.dtd">

<overlay xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

<script src="chrome://frantshelley/content/frantshelley.js" type="application/javascript" />

<script type="application/javascript">

if ("undefined" == typeof(Shelley)) {
    var Shelley = {}
}

Shelley.readyState = {
    content : null,
    element : null,
    _value   : "loading", // status of newpage

    initialize: function(acontent, amenu)
    {
	this.content = acontent.document;
	this.content.addEventListener("readystatechange", this);
	if(amenu)
	{
	    this.element = amenu;
	    acontent.addEventListener("unload", this);
	}
	else this.update(null);
    },

    update: function(avalue)
    {
	if(avalue) this.element.label = this.element.value + avalue;

	avalue = this.content.readyState;
	
	if(avalue === "complete")
	{
	    this.content.removeEventListener("readystatechange", this);
	    this.element.setAttribute("checked", "true");
	    this.element.label = this.element.value + avalue;
	}
	else
	    this.element.removeAttribute("checked");    
    },
    
    handleEvent: function( evt )
    {
	var thestate = this._value;
	if(evt.type == "readystatechange")
	{
	    thestate = this.content.readyState; // document.readyState;
	    if(thestate == "complete")
	    {
		this.content.removeEventListener("readystatechange", this);
		this.element.setAttribute("checked", "true");
	    }
	}
	else {	//	unload
	    window.setTimeout(	// refer to container: element.ownerDocument.
		function() {
		    Shelley.readyState.initialize(this.content);
		}, 1 );
//	this.content.addEventListener("readystatechange", this);
	}
	this.element.label = this.element.value + thestate;
    },

    terminate: function()
    {
	if(this.content)
	{
	    this.content.defaultView.removeEventListener("unload", this);
	    this.content.removeEventListener("readystatechange", this);
	}
	this.content = null;
    }
}

    //	for allowall \ disallow
Shelley.reset = function (newvalue)
{
    var thedocshell = gBrowser.selectedBrowser.docShell;
    for (let theval in Shelley.seltabState)
	thedocshell[theval] = newvalue;
}

Shelley.appendixStop = function()
{
    if(Shelley.seltabState.allowJavascript)
    if(gBrowser)	// move to oncmd
	gBrowser.selectedBrowser.webNavigation.stop(Components.interfaces.nsIWebNavigation.STOP_CONTENT);
//    dump("_dvk_dbg_, stick appendix event to 'docShelley-javascript'.\n"); // _dvk_dbg_
}

    // updates child state and returns object.nsIDocShell
Shelley.popupshow = function()
{
    if(!gBrowser) return;
    var thedocshell = gBrowser.selectedBrowser.docShell;
    if(!thedocshell) return;

//	save state
    for (let theval in Shelley.seltabState)
	Shelley.seltabState[theval] = thedocshell[theval];

    try {
//	if(browser) dump("_dvk_dbg_, browser.\n"); _dvk_dbg_
//	if(appcontent) dump("_dvk_dbg_, appcontent.\n");
        var thewintop = window.QueryInterface(Components.interfaces.nsIInterfaceRequestor)
                    .getInterface(Components.interfaces.nsIWebNavigation)
                    .QueryInterface(Components.interfaces.nsIDocShell);
//    dump("_dvk_dbg_, top window:\t"); dump(gBrowser.selectedBrowser.docShell); dump("\n\n"); // _dvk_dbg_
	if(!thewintop) thewintop = thedocshell;

	var thyes = 4;
	var theno = 4;

	for each (let theval in Shelley.item2shell)
	{
	    let thelement = document.getElementById(theval);
//thelement.oncommand = "gFrantShelley[this.value] = !(this.hasAttribute('checked'))";
	    let thecheck = Shelley.seltabState[thelement.value];
	    let theclash = thewintop[thelement.value];
	    if(thelement.value === "allowJavascript")
		theclash = thecheck; // canExecuteScripts makes difference
	    else
		if(theclash) theclash = thecheck; // indeed not clash:-)

	    if(theclash)
	    {
		thelement.removeAttribute("disabled");
		thelement.setAttribute("checked", "true");
		--thyes;
	    }
	    else{
		thelement.setAttribute("disabled", thecheck);
		thelement.removeAttribute("checked");
		--theno; // if disabled then exclude both:
		if(thecheck) --thyes;
	    }
//	    let thestr = "gBrowser.selectedBrowser.docShell[this.value] = " + (!thecheck) + ";";
//	    thelement.setAttribute("oncommand", thestr);
	}
//	dump("_dvk_dbg_, .nsIDocShell:\t"); dump(thedocshell[thattr]); dump("\n");
	if(thedocshell.canExecuteScripts != thedocshell.allowJavascript)
	{
	    if(thedocshell.allowJavascript) --theno
		else --thyes;
	    let thelement = document.getElementById("docShelley-javascript");
	    if(thedocshell.canExecuteScripts)
		    thelement.setAttribute("checked", "true")
		else thelement.removeAttribute("checked");
	    thelement.setAttribute("disabled", "true");
	}

	document.getElementById("docShelley-allowall").setAttribute("disabled", (thyes == 0));
	document.getElementById("docShelley-disallow").setAttribute("disabled", (theno == 0));
    }
    catch (e) {
        Components.utils.reportError(e)
    }

    //	BLOCK services "docShelley-status" menu item
    try {
	let thelement = document.getElementById("docShelley-status");
    //	readystatechange
	Shelley.readyState.initialize(content, thelement);
	Shelley.readyState.update(content.document.readyState);
    }
    catch (e) {
        Components.utils.reportError(e)
    }

    return;
}

</script>

  <menupopup id="contentAreaContextMenu" >
        <menuitem id="context-removeimage" label="&eraseImage.label;" hidden="true"
                  insertafter="context-setDesktopBackground" accesskey="&eraseImage.accesskey;"
                  oncommand="gContextMenu.target.parentNode.removeChild(gContextMenu.target);" />
        <menuitem id="context-openlinksandbox" label="&openLinkCmdInSandbox.label;" hidden="true"
                  insertafter="context-openlink" accesskey="&openLinkCmdInSandbox.accesskey;"
                  oncommand="Shelley.man.sandboxLink(gContextMenu);" />
        <menuitem id="context-setDesktopBackground" disabled="true" />
	
  </menupopup>

  <menubar id="main-menubar">
	<menu id="docShelley-menu" label="&mainmenuShell.label;" accesskey="&mainmenuShell.accesskey;"
              flags="dont-test-empty" insertafter="view-menu" >
	    <menupopup onpopupshowing="Shelley.popupshow();"
		       onpopuphiding="Shelley.readyState.terminate();" >
                <menuitem id="docShelley-javascript" type="checkbox" autocheck="false"
			label="&menuJavascript.label;" value="allowJavascript"
			oncommand="Shelley.appendixStop();"
			accesskey="&menuJavascript.accesskey;" />
		
                <menuitem id="docShelley-subframes" type="checkbox" autocheck="false"
			  label="&menuSubframes.label;" value="allowSubframes"
			accesskey="&menuSubframes.accesskey;" />

                <menuitem id="docShelley-redirects" type="checkbox" autocheck="false"
			  label="&menuRedirects.label;" value="allowMetaRedirects" 
			accesskey="&menuRedirects.accesskey;" />

                <menuitem id="docShelley-plugins" type="checkbox" autocheck="false"
			  label="&menuPlugins.label;" value="allowPlugins"
			accesskey="&menuPlugins.accesskey;" />

		<menuseparator />
                <menuitem id="docShelley-allowall" label="&menuAllowall.label;" 
			accesskey="&menuAllowall.accesskey;" oncommand="Shelley.reset(true);" />
                <menuitem id="docShelley-disallow" label="&menuDisallow.label;"
			accesskey="&menuDisallow.accesskey;" oncommand="Shelley.reset(false);" />
		<menuseparator />
                <menuitem id="docShelley-status" label="Status" type="radio"
			autocheck="false" disabled="true" value="&menuStatus.label;" />
            </menupopup>
        </menu>
  </menubar>
</overlay>
